// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: organisations.sql

package repository

import (
	"context"
	"database/sql"
	"time"
)

const createOrganisation = `-- name: CreateOrganisation :one
INSERT INTO organisations (id, name, created_by, created_on_utc, modified_on_utc, modified_by)
VALUES (?1, ?2, ?3, ?4, ?5, ?6)
RETURNING id
`

type CreateOrganisationParams struct {
	ID            string
	Name          string
	Createdby     sql.NullString
	Createdonutc  time.Time
	Modifiedonutc time.Time
	Modifiedby    sql.NullString
}

func (q *Queries) CreateOrganisation(ctx context.Context, arg CreateOrganisationParams) (string, error) {
	row := q.db.QueryRowContext(ctx, createOrganisation,
		arg.ID,
		arg.Name,
		arg.Createdby,
		arg.Createdonutc,
		arg.Modifiedonutc,
		arg.Modifiedby,
	)
	var id string
	err := row.Scan(&id)
	return id, err
}
